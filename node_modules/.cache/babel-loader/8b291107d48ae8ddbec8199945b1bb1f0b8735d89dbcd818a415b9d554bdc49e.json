{"ast":null,"code":"var _jsxFileName = \"/Users/nouman/Desktop/Web Dev/weather-viz-template/src/components/WeatherCityDisplay.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherCityDisplay({\n  data\n}) {\n  // Define a maximum precipitation threshold for the purpose of calculating percentage\n  const maxPrecipitation = 10; // Maximum precipitation in mm for 100%\n\n  // Checking for precipitation data in rain or snow object\n  const precipitation = data.rain ? data.rain[\"1h\"] || data.rain[\"3h\"] : data.snow ? data.snow[\"1h\"] || data.snow[\"3h\"] : 0;\n\n  // Calculate precipitation percentage\n  const precipitationPercentage = precipitation / maxPrecipitation * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: data.main && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [data.main.temp.toFixed(), \"\\xB0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.weather ? data.weather[0].main : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Precipitation: \", Math.min(100, precipitationPercentage.toFixed(2)), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humidity \", data.main.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), data.wind && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind Speed \", data.wind.speed.toFixed(), \" MPH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = WeatherCityDisplay;\nexport default WeatherCityDisplay;\nvar _c;\n$RefreshReg$(_c, \"WeatherCityDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","WeatherCityDisplay","data","maxPrecipitation","precipitation","rain","snow","precipitationPercentage","className","children","main","temp","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","weather","Math","min","humidity","wind","speed","_c","$RefreshReg$"],"sources":["/Users/nouman/Desktop/Web Dev/weather-viz-template/src/components/WeatherCityDisplay.jsx"],"sourcesContent":["import React from \"react\";\n\nfunction WeatherCityDisplay({ data }) {\n  // Define a maximum precipitation threshold for the purpose of calculating percentage\n  const maxPrecipitation = 10; // Maximum precipitation in mm for 100%\n\n  // Checking for precipitation data in rain or snow object\n  const precipitation = data.rain\n    ? data.rain[\"1h\"] || data.rain[\"3h\"]\n    : data.snow\n    ? data.snow[\"1h\"] || data.snow[\"3h\"]\n    : 0;\n\n  // Calculate precipitation percentage\n  const precipitationPercentage = (precipitation / maxPrecipitation) * 100;\n\n  return (\n    <div className=\"container\">\n      <div className=\"top\">\n        {data.main && (\n          <div>\n            <h1>{data.main.temp.toFixed()}Â°F</h1>\n            <p>{data.weather ? data.weather[0].main : null}</p>\n            <p>\n              Precipitation: {Math.min(100, precipitationPercentage.toFixed(2))}\n              %\n            </p>\n            <p>Humidity {data.main.humidity}%</p>\n            {data.wind && <p>Wind Speed {data.wind.speed.toFixed()} MPH</p>}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default WeatherCityDisplay;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,kBAAkBA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACpC;EACA,MAAMC,gBAAgB,GAAG,EAAE,CAAC,CAAC;;EAE7B;EACA,MAAMC,aAAa,GAAGF,IAAI,CAACG,IAAI,GAC3BH,IAAI,CAACG,IAAI,CAAC,IAAI,CAAC,IAAIH,IAAI,CAACG,IAAI,CAAC,IAAI,CAAC,GAClCH,IAAI,CAACI,IAAI,GACTJ,IAAI,CAACI,IAAI,CAAC,IAAI,CAAC,IAAIJ,IAAI,CAACI,IAAI,CAAC,IAAI,CAAC,GAClC,CAAC;;EAEL;EACA,MAAMC,uBAAuB,GAAIH,aAAa,GAAGD,gBAAgB,GAAI,GAAG;EAExE,oBACEH,OAAA;IAAKQ,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBT,OAAA;MAAKQ,SAAS,EAAC,KAAK;MAAAC,QAAA,EACjBP,IAAI,CAACQ,IAAI,iBACRV,OAAA;QAAAS,QAAA,gBACET,OAAA;UAAAS,QAAA,GAAKP,IAAI,CAACQ,IAAI,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,EAAC,OAAE;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrChB,OAAA;UAAAS,QAAA,EAAIP,IAAI,CAACe,OAAO,GAAGf,IAAI,CAACe,OAAO,CAAC,CAAC,CAAC,CAACP,IAAI,GAAG;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnDhB,OAAA;UAAAS,QAAA,GAAG,iBACc,EAACS,IAAI,CAACC,GAAG,CAAC,GAAG,EAAEZ,uBAAuB,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC,EAAC,GAEpE;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJhB,OAAA;UAAAS,QAAA,GAAG,WAAS,EAACP,IAAI,CAACQ,IAAI,CAACU,QAAQ,EAAC,GAAC;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,EACpCd,IAAI,CAACmB,IAAI,iBAAIrB,OAAA;UAAAS,QAAA,GAAG,aAAW,EAACP,IAAI,CAACmB,IAAI,CAACC,KAAK,CAACV,OAAO,CAAC,CAAC,EAAC,MAAI;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACO,EAAA,GAhCQtB,kBAAkB;AAkC3B,eAAeA,kBAAkB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}